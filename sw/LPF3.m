function y = LPF3(x)
%LPF3 Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 8.2 and the DSP System Toolbox 8.5.
% Generated on: 24-Jun-2014 01:10:11

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Lowpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 8000000;  % Sampling Frequency
    %
    % Fpass = 3000000;         % Passband Frequency
    % Fstop = 4000000;         % Stopband Frequency
    % Dpass = 0.057501127785;  % Passband Ripple
    % Dstop = 0.01;            % Stopband Attenuation
    % dens  = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [0.0356982852702682 -0.0556294081239501 ...
        0.0859550789103563 -0.114390672342338 0.134664236131172 ...
        0.857995319718386 0.134664236131172 -0.114390672342338 ...
        0.0859550789103563 -0.0556294081239501 0.0356982852702682]);
end

y = step(Hd,x);


% [EOF]
